package Programmers.Lv0;

import java.util.*;
import java.util.stream.Collectors;

public class S221206_가까운수 {

	public static void main(String[] args) {

//		int[] array = { 3, 28, 10 }; // - 20 { -17, -10, 8}
		int[] array = { -1, 1, 2, 10, 11, 12 };
		int n = 0;
		int answer = 0;
		Arrays.sort(array);
		for (int i = 1; i < array.length; i++) {
			if (Math.abs(n - array[0]) > Math.abs(n - array[i])) {
				array[0] = array[i];
			}
		}
		answer = array[0];
		System.out.println(answer);
		System.out.println("================================");
//		return Math.min(
//				array[Arrays.stream(array).map(operand -> Math.abs(n - operand)).boxed().collect(Collectors.toList())
//						.indexOf(Arrays.stream(array).map(operand -> Math.abs(n - operand)).min().orElse(0))],
//				array[Arrays.stream(array).map(operand -> Math.abs(n - operand)).boxed().collect(Collectors.toList())
//						.lastIndexOf(Arrays.stream(array).map(operand -> Math.abs(n - operand)).min().orElse(0))]);
		System.out.println("================================");
		List<Integer> list = Arrays.stream(array).boxed().collect(Collectors.toList());
		list.add(n);
		list.sort(null);
		int index = list.indexOf(n);
		if (index == 0) {
			answer = list.get(index + 1);
		}
		if (index == list.size() - 1) {
			answer = list.get(index - 1);
		}
		if (Math.abs(list.get(index - 1) - n) > list.get(index + 1) - n) {
			answer = list.get(index + 1);
		} else {
			answer = list.get(index - 1);
		}
	}

}
